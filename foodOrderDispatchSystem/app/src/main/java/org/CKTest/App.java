/*
 * This source file was generated by the Gradle 'init' task
 */
package org.CKTest;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.lang.reflect.Type;



public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        Kitchen kitchen = new Kitchen();
        CourierGenerator courieriGenerator = new CourierGenerator();
        ClassLoader classLoader = App.class.getClassLoader();
        try (InputStream inputStream = classLoader.getResourceAsStream("dispatch_orders.json");
        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))) {
        List<Order> orders = parseOrders(reader);
        Map<String, Courier> orderCourierMap = courieriGenerator.generateCouriers(orders);
        kitchen.dispatchFIFO(orders, orderCourierMap );
            
        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
        }
    }

    private static List<Order> parseOrders(BufferedReader reader) {
        Gson gson = new Gson();
        Type orderListType = new TypeToken<List<Order>>(){}.getType();
        return gson.fromJson(reader, orderListType);
    }
}
